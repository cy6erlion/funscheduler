               ┌─┐┬ ┬┌┐┌┌─┐┌─┐┬ ┬┌─┐┌┬┐┬ ┬┬  ┌─┐┬─┐
               ├┤ │ ││││└─┐│  ├─┤├┤  │││ ││  ├┤ ├┬┘
               └  └─┘┘└┘└─┘└─┘┴ ┴└─┘─┴┘└─┘┴─┘└─┘┴└─

----------------------------------------------------------------------
  Time based function execution scheduler
----------------------------------------------------------------------

    use funscheduler::{FunScheduler, Timing};

    fn main() {
      // Execute job every second
      FunScheduler::interval(job, Timing::Seconds(1));
    }

    fn job() {
      println!("Hello, world");
    }

----------------------------------------------------------------------
  Timings allow simple congiguration of the function execution
----------------------------------------------------------------------

    Timing::Seconds(1)
    Timing::Minutes(25)
    Timing::Hours(2)
    Timing::Days(1)
    
----------------------------------------------------------------------
  Job runners, different methods/ways to execute the function
----------------------------------------------------------------------

    // Evaluates a function at specified intervals, starting now
    FunScheduler::interval(job, Timing::Seconds(1))

    // Evaluates a function at specified intervals, does not execute
    // the function immedialy
    FunScheduler::rinterval(job, Timing::Seconds(1))

    // Execute function once after a specified amount of time
    FunScheduler::after(job, Timing::Seconds(1))


.-{ seestem@protonmail.com ⧉ }-------------------------------------.
| Written and placed in the public domain by Jackson G. Kaindume     |
'--------------------------------------------------------------[2021]+